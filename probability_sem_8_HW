import scipy.stats as st
import numpy as np
import sns as sns
from matplotlib import pyplot

# 1) Даны значения величины заработной платы заемщиков банка (zp)
# и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек numpy и pandas.
zp = (35, 45, 190, 200, 40, 70, 54, 150, 120, 110)
ks = (401, 574, 874, 919, 459, 739, 653, 902, 746, 832)

covariance = np.cov(zp, ks)[0][1]
correlation = np.corrcoef(zp, ks)
print(covariance)
print('---------')
print(correlation)

# 2) Измерены значения IQ выборки студентов,
# обучающихся в местных технических вузах:
# 131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
# Известно, что в генеральной совокупности IQ распределен нормально.
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.

data = [131, 125, 115, 122, 131, 115, 107, 99, 125, 111]
print(st.t.interval(confidence=0.95, df=len(data)-1, loc=np.mean(data), scale=st.sem(data)))

# Задача 2
# Поскольку n ≤ 30, то определяем значение tkp по таблице распределения Стьюдента
# По таблице Стьюдента находим:
# Tтабл (n-1;α/2) = (27;0.025) = 2.379
# 
# (174.2 - 2.289;174.2 + 2.289) = (171.91;176.49)
# С вероятностью 0.95 можно утверждать, что среднее значение при выборке большего объема 
# не выйдет за пределы найденного интервала.
